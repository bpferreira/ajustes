name: Ajustes Diário

on:
  schedule:
    - cron: "30 8 * * 1-5"  # 05:30 BRT (08:30 UTC), dias úteis
  workflow_dispatch:

permissions:
  contents: write

jobs:
  baixar-ajustes:
    runs-on: ubuntu-latest
    container:
      image: bpferreira/ajustes:v1

    steps:
      - name: Checkout do repositório (forçar versão mais recente)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Força fetch completo para evitar cache

      - name: Verificar versão atual (sem cache)
        run: |
          echo "🔍 VERIFICAÇÃO DE CACHE:"
          echo "📅 Data/hora: $(date)"
          echo "📋 Último commit: $(git log -1 --oneline)"
          echo "📋 Commit hash: $(git rev-parse HEAD)"
          echo "📁 Conteúdo do workflow atual:"
          cat .github/workflows/ajustes.yml | head -10
          echo "✅ Verificação de cache concluída"

      # >>> PASSO CRÍTICO: configurar Git FORA do repo e marcar safe.directory no SYSTEM
      - name: Fix Git ownership (system-level safe.directory)
        working-directory: /
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          git config --system --add safe.directory '*'
          git config --system --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name  "GitHub Action"
          git config --global user.email "action@github.com"
          echo "--- git config (origens) ---"
          git config --list --show-origin | grep -E 'safe\.directory|user\.name|user\.email' || true
          echo "✅ Git configurado fora do repositório"

      - name: Verificar estrutura inicial
        run: |
          echo "📁 Estrutura inicial:"
          ls -la
          echo "📁 Conteúdo de data/:"
          ls -la data/ || echo "Pasta data/ não existe"
          echo "📁 Conteúdo de data/ajustes/:"
          ls -la data/ajustes/ || echo "Pasta data/ajustes/ não existe"

      - name: Executar diagnóstico de diretórios
        run: |
          echo "🔍 Executando diagnóstico de diretórios..."
          Rscript R/diagnostico_diretorios.R

      - name: Rodar baixar_b3.R com retry
        run: |
          set -e
          for i in {1..5}; do
            echo "Tentativa {$i} para baixar B3..."
            if Rscript R/baixar_b3.R; then
              echo "✅ baixar_b3.R concluído"
              break
            fi
            echo "❌ Falha. Aguardando e tentando novamente..."
            sleep 10
          done

      - name: Rodar baixar_anbima.R com retry
        run: |
          set -e
          for i in {1..5}; do
            echo "Tentativa {$i} para baixar ANBIMA..."
            if Rscript R/baixar_anbima.R; then
              echo "✅ baixar_anbima.R concluído"
              break
            fi
            echo "❌ Falha. Aguardando e tentando novamente..."
            sleep 10
          done

      - name: Limpar arquivos antigos (+5 dias)
        run: |
          echo "🧹 Limpando CSV antigos com mais de 5 dias em data/ajustes/**"
          find data/ajustes -type f -name "*.csv" -mtime +5 -print -delete || true

      - name: Verificar arquivos gerados
        run: |
          echo "📁 Conteúdo de data/ajustes/:"
          ls -la data/ajustes/ || echo "Pasta data/ajustes/ não existe"
          echo "📁 Conteúdo de data/ajustes/b3/:"
          ls -la data/ajustes/b3/ || echo "Pasta data/ajustes/b3/ não existe"
          echo "📁 Conteúdo de data/ajustes/anbima/:"
          ls -la data/ajustes/anbima/ || echo "Pasta data/ajustes/anbima/ não existe"

      - name: Pull com rebase (evitar conflitos)
        run: git pull --rebase || true

      # ⚠️ NADA de `git config` aqui. Apenas add/commit/push.
      - name: Commit e push dos arquivos atualizados
        run: |
          echo "📝 Preparando commit..."
          git add -A
          git status
          git commit -m "Atualizar dados de ajustes - $(date '+%Y-%m-%d')" || echo "Nenhuma mudança para commit"
          git push || echo "Nenhuma mudança para push"
