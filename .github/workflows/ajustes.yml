name: Ajustes Diário

on:
  schedule:
    - cron: "30 8 * * 1-5"  # Executa às 05:30 BRT (08:30 UTC), dias úteis
  workflow_dispatch:         # Permite execução manual via botão

jobs:
  baixar-ajustes:
    runs-on: ubuntu-latest
    container:
      image: bpferreira/ajustes:v1  # Imagem Docker com R e pacotes

    steps:
      - name: Checkout do repositório (forçar versão mais recente)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Força fetch completo para evitar cache

      - name: Verificar versão do workflow
        run: |
          echo "🔍 Verificando versão atual do workflow..."
          echo "📅 Data/hora atual: $(date)"
          echo "📋 Último commit: $(git log -1 --oneline)"
          echo "📁 Conteúdo do workflow:"
          cat .github/workflows/ajustes.yml | head -20

      - name: Configurar Git para GitHub Actions
        env:
          GIT_SAFE_DIRECTORY: /_w/ajustes/ajustes
        run: |
          echo "🔧 Configurando Git para resolver 'dubious ownership'..."
          echo "📁 Diretório atual: $(pwd)"
          echo "🔒 Configurando safe.directory via variável de ambiente..."
          
          # Estratégia 1: Variável de ambiente
          export GIT_SAFE_DIRECTORY="/_w/ajustes/ajustes:/github/workspace:."
          
          # Estratégia 2: Configuração global ANTES de qualquer comando Git
          git config --global --add safe.directory /_w/ajustes/ajustes
          git config --global --add safe.directory /github/workspace
          git config --global --add safe.directory /__w/ajustes/ajustes
          git config --global --add safe.directory .
          git config --global --add safe.directory /_w/ajustes
          
          # Estratégia 3: Configurar usuário APÓS safe.directory
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          echo "✅ Git configurado com múltiplas estratégias de segurança"

      - name: Verificar estrutura inicial
        run: |
          echo "📁 Estrutura inicial:"
          ls -la
          echo "📁 Conteúdo de data/:"
          ls -la data/ || echo "Pasta data/ não existe"
          echo "📁 Conteúdo de data/ajustes/:"
          ls -la data/ajustes/ || echo "Pasta data/ajustes/ não existe"

      - name: Executar diagnóstico completo
        run: |
          echo "🔍 Executando diagnóstico completo..."
          Rscript R/diagnostico_completo.R

      - name: Rodar baixar_b3.R
        run: |
          echo "📊 Executando baixar_b3.R..."
          Rscript R/baixar_b3.R
          echo "✅ baixar_b3.R concluído"

      - name: Rodar baixar_anbima.R
        run: |
          echo "📊 Executando baixar_anbima.R..."
          Rscript R/baixar_anbima.R
          echo "✅ baixar_anbima.R concluído"

      - name: Verificar arquivos gerados
        run: |
          echo "📁 Verificando arquivos gerados:"
          echo "📁 Conteúdo de data/ajustes/:"
          ls -la data/ajustes/ || echo "Pasta data/ajustes/ não existe"
          echo "📁 Conteúdo de data/ajustes/b3/:"
          ls -la data/ajustes/b3/ || echo "Pasta data/ajustes/b3/ não existe"
          echo "📁 Conteúdo de data/ajustes/anbima/:"
          ls -la data/ajustes/anbima/ || echo "Pasta data/ajustes/anbima/ não existe"

      - name: Commit e push dos arquivos atualizados
        env:
          GIT_SAFE_DIRECTORY: /_w/ajustes/ajustes
        run: |
          echo "📝 Preparando commit..."
          git add .
          git status
          git commit -m "Atualizar dados de ajustes - $(date '+%Y-%m-%d')" || echo "Nenhuma mudança para commit"
          git push || echo "Nenhuma mudança para push"
